{new
   UIPanel
   options_panel
   (file
    {if_else
	  $gamegh1
	  options_gh1.milo
	{if_else
      $game80s
      options_80s.milo
      options.milo}})
   (focus video_settings.btn)
   (enter
         {op_data.btn set_state kDisabled}
         {op_data.btn set_showing FALSE}
         {memory_card.btn set_state kDisabled}
         {memory_card.btn set_showing FALSE}
		 {op_bonus.btn set_state kDisabled}
		 {op_bonus.btn set_showing FALSE})
   (SELECT_START_MSG
      {switch
         $component
         (video_settings.btn
            {ui goto_screen video_settings_screen})
         (op_data.btn
            {ui goto_screen options_chooseprof_screen})
         (op_credit.btn
            {ui goto_screen credits_screen})}
      kDataUnhandled)}
{new
   GHScreen
   options_screen
   (panels meta options_panel helpbar)
   (focus options_panel)
   (helpbar
      (default
         ((fret1 help_continue)
            (fret2 help_back)
            (strum help_updown))))}
{new
   SliderPanel
   audio_settings_panel
   (file
    {if_else
	  $gamegh1
	  game_settings_gh1.milo
	{if_else
      $game80s
      game_settings_80s.milo
      game_settings.milo}})
   AUDIO_SETTINGS_PANEL_HANDLERS}
{new
   GHScreen
   audio_settings_screen
   (panels meta audio_settings_panel helpbar)
   (focus audio_settings_panel)
   (allow_back FALSE)
   (BUTTON_DOWN_MSG
      {if
         {&&
            {!
               {audio_settings_panel slider_selected}}
            {== $button kPad_Tri}}
         {$this backwards_anim}
         {synth play_sequence button_back.cue}
         {$this set_volumes}
         {autosave_goto options_screen}}
      kDataUnhandled)}
{new
   CreditsPanel
   credits_panel
   (file credits.milo)
   (enter
      {meta_music stop}
#ifdef HX_XBOX {profilemgr disable_xmp} #endif)
   (exit
      {meta_music start}
#ifdef HX_XBOX {profilemgr disable_xmp} #endif)}
{new
   GHScreen
   credits_screen
   (panels meta credits_panel helpbar)
   (focus credits_panel)
   (helpbar
      (default
         ((fret2 help_back))))
   (SCROLL_MSG
      {do
         ($new_scroll_pos
            {{credits_panel find credits.lst}
               selected_pos})
         {if
            {==
               {'+' 1 $new_scroll_pos}
               {$this num_lines}}
#ifdef HX_XBOX {achievements submit credits} #endif
            {$this go_back}}}
      kDataUnhandled)
   (go_back
      {$this backwards_anim}
      {ui goto_screen options_screen})}
{new
   LagPanel
   lag_panel
   (file lag.milo)
   (focus autocalibrate.btn)
   (from_panel
      "")
   (state init)
   (lag 0)
   (hits
      ())
   (seconds
      ())
   (window 50)
   (min_hits 7)
   (min_avg -100)
   (max_avg 250)
   (update_groups
      {cond
         ({==
               [state]
               calibrating}
            {buttons.grp set showing FALSE})
         (TRUE
            {buttons.grp set showing TRUE})})
   (update_helpbar
      {do
         ($array)
         {set
            $array
            ()}
         {resize $array 0}
         {cond
            ({==
                  [state]
                  calibrating}
               {push_back
                  $array
                  (strum help_hitonchange)})
            (TRUE
               {push_back
                  $array
                  (fret1 help_select)}
               {push_back
                  $array
                  (fret2 help_back)}
               {push_back
                  $array
                  (strum help_updown)})}
         {helpbar set_display $array}})
   (update_text
      {switch
         [state]
         (init
            {instructions.lbl set text_token lag_info_why}
            {instructions2.lbl set text_token lag_info_howto}
            {setting.lbl
               set_localized
               {sprintf
                  {localize lag_setting}
                  {int
                     [lag]}}}
            {autocalibrate.btn set text_token lag_button_calibrate})
         (calibrating
            {instructions.lbl set text_token lag_measuring}
            {instructions2.lbl
               set
               text_token
               ""}
            {setting.lbl
               set_localized_text
               ""})
         (success
            {instructions.lbl set text_token lag_success}
            {instructions2.lbl
               set_localized
               ""}
            {setting.lbl
               set_localized
               {sprintf
                  {localize lag_measured}
                  {int
                     [lag]}}}
            {autocalibrate.btn set text_token lag_button_recalibrate})
         (failure
            {instructions.lbl set text_token lag_info_failure}
            {instructions2.lbl set text_token lag_info_howto}
            {setting.lbl
               set_localized
               {sprintf
                  {localize lag_setting}
                  {int
                     [lag]}}}
            {autocalibrate.btn set text_token lag_button_recalibrate})})
   (set_state
      ($s)
      {set
         [state]
         $s}
      {$this update_groups}
      {$this update_helpbar}
      {$this update_text})
   (enter
      {countdown.lbl
         set_localized
         ""}
      {set
         [lag]
         {-
            0
            {options get_sync_offset}}}
      {$this set_state init}
      {set
         [hits]
         {array 0}}
      {set
         [seconds]
         {array 0}})
   (exit
      {options
         set_sync_offset
         {-
            0
            [lag]}})
   (BUTTON_DOWN_MSG
      {if_else
         {==
            [state]
            calibrating}
         {if
            {'||'
               {== $button kPad_DDown}
               {== $button kPad_DUp}}
            {push_back
               [hits]
               {taskmgr ui_seconds}}}
         {switch
            $button
            (kPad_Tri
               {if_else
                  {==
                     [from_panel]
                     video_settings_panel}
                  {ui goto_screen video_settings_screen}
                  {ui goto_screen pause_video_settings_screen}})
            kDataUnhandled}})
   (SELECT_START_MSG
      {switch
         $component
         (autocalibrate.btn
            {$this set_state calibrating}
            {$this start_countdown})
         (reset_to_zero.btn
            {set
               [lag]
               0.0}
            {$this set_state init})})
   (play_sync_animation
      {lag animate})
   (start_countdown
      {set $lag_aniamte_thread_wait TRUE}
      {set $lag_animate_thread_loop TRUE}
      {thread_task
         (units kTaskUISeconds)
         (script
            {set $success TRUE}
            {countdown.lbl set text_token lag_3}
            {practice_hat play}
            {$task sleep 0.133}
            {$task sleep 0.6}
            {practice_hat play}
            {countdown.lbl set text_token lag_2}
            {$task sleep 0.133}
            {$task sleep 0.6}
            {practice_hat play}
            {countdown.lbl set text_token lag_1}
            {$task sleep 0.133}
            {$task sleep 0.6}
            {practice_hat play}
            {countdown.lbl set text_token lag_go}
            {$task sleep 0.133}
            {resize
               [hits]
               0}
            {resize
               [seconds]
               0}
            {$this play_sync_animation}
            {$task sleep 0.6}
            {sync_click.cue play}
            {push_back
               [seconds]
               {taskmgr ui_seconds}}
            {$task sleep 0.133}
            {$this play_sync_animation}
            {$task sleep 0.6}
            {sync_click.cue play}
            {push_back
               [seconds]
               {taskmgr ui_seconds}}
            {$task sleep 0.133}
            {$this play_sync_animation}
            {$task sleep 0.6}
            {sync_click.cue play}
            {push_back
               [seconds]
               {taskmgr ui_seconds}}
            {$task sleep 0.133}
            {$this play_sync_animation}
            {$task sleep 0.6}
            {sync_click.cue play}
            {push_back
               [seconds]
               {taskmgr ui_seconds}}
            {$task sleep 0.133}
            {$this play_sync_animation}
            {$task sleep 0.6}
            {sync_click.cue play}
            {push_back
               [seconds]
               {taskmgr ui_seconds}}
            {$task sleep 0.133}
            {$this play_sync_animation}
            {$task sleep 0.6}
            {sync_click.cue play}
            {push_back
               [seconds]
               {taskmgr ui_seconds}}
            {$task sleep 0.133}
            {$this play_sync_animation}
            {$task sleep 0.6}
            {sync_click.cue play}
            {push_back
               [seconds]
               {taskmgr ui_seconds}}
            {$task sleep 0.133}
            {$this play_sync_animation}
            {$task sleep 0.6}
            {sync_click.cue play}
            {push_back
               [seconds]
               {taskmgr ui_seconds}}
            {$task sleep 0.133}
            {$this play_sync_animation}
            {$task sleep 0.6}
            {sync_click.cue play}
            {push_back
               [seconds]
               {taskmgr ui_seconds}}
            {$task sleep 0.133}
            {$this play_sync_animation}
            {$task sleep 0.6}
            {sync_click.cue play}
            {push_back
               [seconds]
               {taskmgr ui_seconds}}
            {$task sleep 0.133}
            {$this play_sync_animation}
            {$task sleep 0.6}
            {sync_click.cue play}
            {push_back
               [seconds]
               {taskmgr ui_seconds}}
            {$task sleep 0.133}
            {countdown.lbl
               set_localized
               ""}
            {$task sleep 0.6}
            {set
               [lag]
               {$this
                  calculate_lag
                  [window]
                  [min_hits]
                  [hits]
                  [seconds]}}
            {if_else
               {&&
                  {>
                     [lag]
                     [min_avg]}
                  {<
                     [lag]
                     [max_avg]}}
               {set $success TRUE}
               {set $success FALSE}}
            {if
               {'||'
                  {<
                     [lag]
                     0}
                  {>=
                     [lag]
                     [max_avg]}}
               {set
                  [lag]
                  0}}
            {$this
               set_state
               {if_else $success success failure}})})}
{new
   GHScreen
   lag_screen
   (panels lag_panel helpbar)
   (focus lag_panel)}
{new
   GHScreen
   pause_lag_screen
   (panels GAME_PANELS lag_panel helpbar)
   (focus lag_panel)
   (clear_vram TRUE)
   (enter
      {game80s.btn set_state kDisabled}
	  {game80s.btn set_showing FALSE}
      {hud set_showing FALSE}
      {track_panel set_showing FALSE}
      {world_panel set_showing FALSE})}
#define VIDEO_SETTINGS_PANEL_HANDLERS
((focus gs_left_p1.btn)
   (focus_component
      "")
   (orig_sync 0)
   (enter
      {lefty1.chk
         set_check
         {options get_lefty 0}}
      {lefty2.chk
         set_check
         {options get_lefty 1}}
#ifndef HX_XBOX
      {widescreen.chk
         set_check
         {options get_widescreen}}
      {p_scan.chk
         set_check
         {options get_pscan}}
#endif
      {$this update_help_display}
      {if
         {==
            {$this name}
            pause_video_settings_panel}
         {hud set_showing TRUE}
         {track_panel set_showing TRUE}
         {world_panel set_showing TRUE}})
   (update_help_display
      {if_else
         {==
            [focus_component]
            "calibrate_lag.btn"}
         {helpbar
            set_display
            ((fret1 help_select)
               (fret2 help_back)
               (strum help_updown))}
         {helpbar
            set_display
            ((fret1 help_select)
               (fret2 help_back)
               (strum help_updown))}})
   (FOCUS_MSG
      {$this
         set
         focus_component
         {$new_focus name}}
      {$this update_help_display})
   (slider_start_msg
      ($component)
      {synth play_sequence button_toggle})
   (slider_select_cancel
      ($component)
      {$this update_help_display}
      kDataUnhandled)
   (SELECT_START_MSG
      {switch
         $component
         (p_scan.btn
            {if_else
               {p_scan.chk get_check}
               {do
                  {p_scan.chk toggle}
                  {options
                     set_pscan
                     {p_scan.chk get_check}}}
               {do
                  {if
                     {== $this pause_video_settings_panel}
                     {pause_video_settings_screen set stash_lefty_settings FALSE}}
                  {ui
                     goto_screen
                     [pscan_warning]}}})
         (widescreen.btn
            {widescreen.chk toggle}
            {options
               set_widescreen
               {widescreen.chk get_check}})
         (gs_left_p1.btn
            {lefty1.chk toggle}
            {options
               set_lefty
               0
               {lefty1.chk get_check}})
         (gs_left_p2.btn
            {lefty2.chk toggle}
            {options
               set_lefty
               1
               {lefty2.chk get_check}})
         (calibrate_lag.btn
            {lag_panel set from_panel $this}
            {if_else
               {== $this video_settings_panel}
               {ui goto_screen lag_screen}
               {ui goto_screen pause_lag_screen}})
         kDataUnhandled}
      {$this update_help_display}))
{new
   SliderPanel
   video_settings_panel
   (file
	{if_else
      $game80s
      video_settings_80s.milo
      video_settings.milo})
   VIDEO_SETTINGS_PANEL_HANDLERS
   #ifndef HX_XBOX (pscan_warning pscan_warning_screen) #endif}
{new
   GHScreen
   video_settings_screen
   (panels meta video_settings_panel helpbar)
   (focus video_settings_panel)
   (allow_back FALSE)
   (enter
      {$this
         enable
         {video_settings_panel find gs_left_p2.btn}})
   (BUTTON_DOWN_MSG
      {if
         {== $button kPad_Tri}
         {$this backwards_anim}
         {synth play_sequence button_back.cue}
         {autosave_goto options_screen}}
      kDataUnhandled)}
{new
   SliderPanel
   pause_video_settings_panel
   (file 
   {if_else $gamegh1
   pause_video_settings_gh1.milo
   pause_video_settings.milo})
   VIDEO_SETTINGS_PANEL_HANDLERS
   #ifndef HX_XBOX (pscan_warning pause_pscan_warning_screen) #endif}
{new
   GHScreen
   pause_video_settings_screen
   (panels GAME_PANELS pause_video_settings_panel helpbar)
   (focus pause_video_settings_panel)
   (in_game TRUE)
   (allow_back FALSE)
   (animate_transition FALSE)
   (old_lefty_0 0)
   (old_lefty_1 0)
   (stash_lefty_settings TRUE)
   (enter
      {if
         {! $encorefocus}
         {world_panel
            set_showing
            {! $focusmode}}}
      {if_else
         [stash_lefty_settings]
         {do
            {set
               [old_lefty_0]
               {options get_lefty 0}}
            {set
               [old_lefty_1]
               {options get_lefty 1}}}
         {set
            [stash_lefty_settings]
            TRUE}}
      {if_else
         {>
            {game num_players}
            1}
         {$this
            enable
            {pause_video_settings_panel find gs_left_p2.btn}}
         {$this
            disable
            {pause_video_settings_panel find gs_left_p2.btn}}})
   (lefty_changed
      {'||'
         {!=
            [old_lefty_0]
            {options get_lefty 0}}
         {!=
            [old_lefty_1]
            {options get_lefty 1}}})
   (BUTTON_DOWN_MSG
      {if
         {== $button kPad_Tri}
         {if_else
            {$this lefty_changed}
            {do
               {if_else
                  {&&
                     {!=
                        [old_lefty_0]
                        {options get_lefty 0}}
                     {!=
                        [old_lefty_1]
                        {options get_lefty 1}}}
                  {lefty_restart_screen set lefty_switch 2}
                  {if_else
                     {!=
                        [old_lefty_0]
                        {options get_lefty 0}}
                     {lefty_restart_screen set lefty_switch 0}
                     {lefty_restart_screen set lefty_switch 1}}}
               {ui goto_screen lefty_restart_screen}}
            {ui goto_screen pause_screen}}}
      kDataUnhandled)}