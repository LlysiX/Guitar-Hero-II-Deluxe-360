#define MODIFIER_SLIDER_HANDLERS
((focus gs_guitar.sld)
   (focus_component "")
   (reset_focus TRUE)
   (orig_vol 0)
   (finish_load
      {gs_band.sld set_num_steps 60}
      {gs_guitar.sld set_num_steps 21}
      {if_else {'||'
      {== $modifier_exit multi_vs_selsong_screen}
      {== $modifier_exit multi_coop_selsong_screen}
      {== $modifier_exit multi_fo_selsong_screen}}
         {gs_sfx.sld set_num_steps 31}
         {gs_sfx.sld set_num_steps 31}}) ; was 41 steps, dropped to 31 when disallowing <100%
   (slider_changed {'||'
      {!=
         {options get band_volume_idx}
         {gs_guitar.sld current}}
      {!=
         {options get guitar_volume_idx}
         {gs_sfx.sld current}}
      {!=
         {options get guitar_volume_idx}
         {gs_band.sld current}}})
   (enter
      {gs_guitar.sld set_current {int {+ 0.5 {/ {+ {- $trackspd 1} 0.5} 0.1}}}}
      {gs_sfx.sld set_current
         {int {+ 0.5 {/ {- $speedmod 1} 0.05}}}}
      {gs_band.sld set_current
         {int {- $emulatefps 1}}}
      {stereo.chk set_check $focusmode}
      {$this display_speed_msg $trackspd $speedmod $emulatefps})
   (reset_gm_title
      {gs_title.lbl set_localized_text GAME_MODIFIER}
	  )
   (display_speed_msg
      ($tspd $mspd $fps)
      {gs_title.lbl set_localized_text {sprintf {localize speed_msg} {int {+ 0.5 {* $tspd 100}}} {int {+ 0.5 {* $mspd 100}}} {int $fps}}}
	  )
   (set_speeds
      {if {$this slider_changed}
         {do
            {set $trackspd {- {+ 1 {* {gs_guitar.sld current} 0.1}} 0.5}}
            {set $speedmod
               {+ 1 {* {gs_sfx.sld current} 0.05}}}
            {set $emulatefps {+ 1 {gs_band.sld current}}}
            {$this display_speed_msg $trackspd $speedmod $emulatefps}}})
   (slider_select_cancel
      ($component)
      {switch $component
         (gs_guitar.sld {$component set_current [orig_vol]})
         (gs_sfx.sld {$component set_current [orig_vol]})
         (gs_band.sld {$component set_current [orig_vol]})}
      {$this update_help_display}
      {$this set_speeds}
      {$this display_speed_msg $trackspd $speedmod $emulatefps}
      kDataUnhandled)
   (FOCUS_MSG
      {$this set focus_component {$new_focus name}}
      {$this update_help_display})
   (update_help_display
      {if_else {$this slider_selected}
         {helpbar set_display
            ((fret1 help_confirm)
               (fret2 help_cancel)
               (strum help_adjspd))}
         {do
            {if_else {== [focus_component] "gs_stereo.btn"}
               {helpbar set_display
                  ((fret1 help_onoff)
                     (fret2 help_back)
                     (strum help_updown))}
               {helpbar set_display
                  ((fret1 help_select)
                     (fret2 help_back)
                     (strum help_updown))}}}})
   (slider_start_msg
      ($component)
      {do
         {switch $component
            (gs_guitar.sld
               {do
                  {play_sfx button_error (volume 1) (stop TRUE)}
                  {$this set_speeds}})
            (gs_sfx.sld
               {do
                  {play_sfx button_error (volume 1) (stop TRUE)}
                  {$this set_speeds}})
            (gs_band.sld
               {do
                  {play_sfx button_error (volume 1) (stop TRUE)}
                  {$this set_speeds}})}})
   (SELECT_START_MSG
      {switch $component
         (gs_guitar.sld {$this set orig_vol {gs_guitar.sld current}}
		 {if {! $helpentered} {ui push_screen overshell_help_screen}})
         (gs_sfx.sld {$this set orig_vol {gs_sfx.sld current}}
		 {if {! $helpentered} {ui push_screen overshell_help_screen}})
         (gs_band.sld {$this set orig_vol {gs_band.sld current}}
		 {if {! $helpentered} {ui push_screen overshell_help_screen}})
         (gs_stereo.btn
            {stereo.chk toggle}
            {set $focusmode {stereo.chk get_check}}
			{if {! $helpentered} {ui push_screen overshell_help_screen}})
         kDataUnhandled}
      {$this update_help_display}
      {$this set_speeds}
      {$this display_speed_msg $trackspd $speedmod $emulatefps}))
{new
   SliderPanel
   overshell_slider
   (file overshell_slider.milo)
   MODIFIER_SLIDER_HANDLERS}
{new
   GHScreen
   overshell_slider_screen
   (panels overshell_slider)
   (focus overshell_slider)
   (allow_back FALSE)
   (animate_transition FALSE)
   (BUTTON_DOWN_MSG
      {if
         {&&
            {!
               {overshell_slider slider_selected}}
            {== $button kPad_Tri}}
            {ui pop_screen}}
      kDataUnhandled)}
{new
   MultiSelectListPanel
   overshell_list
   (file overshell_list.milo)
   (focus sel_section.lst)
   (enter
   {sel_section.lst set_local_pos -140 0 35}
   {sel_section.lst set circular 1}
   {sel_section.lst set alignment kTopCenter}
      {sel_section.lst
         set_data
         (
          "No Fail"
          "Song Title Always"
		  "Enable Drums"
		  "Monkey Head Crowd"
		  "Eyeball Head Crowd"
		  "Flaming Head Mode"
		  "Neckless Mode"
		  "Performance Mode"
		  "Roxbury Mode")}
		  {gs_title.lbl set_text "MODIFIERS"})
   (SELECT_START_MSG
      {switch
       {$component selected_sym}
       ("No Fail"
         {if_else $nofail
            {do
            {play_sfx cheat_off}
            {set $nofail FALSE}}
			{do
			{play_sfx cheat}
            {set $nofail TRUE}}}
         kDataUnhandled)
       ("Song Title Always"
         {if_else $songtitle
            {do
            {play_sfx cheat_off}
            {set $songtitle FALSE}}
			{do
			{play_sfx cheat}
            {set $songtitle TRUE}}}
         kDataUnhandled)
	   ("Enable Drums"
         {if_else $drumenabled
            {do
            {play_sfx cheat_off}
            {set $drumenabled FALSE}}
			{do
			{play_sfx cheat}
            {set $drumenabled TRUE}}}
         kDataUnhandled)
	   ("Horse Head (PS2)"
         {if_else $cheat_enabled_horse_head_mode
            {do
            {play_sfx cheat_off}
            {set $cheat_enabled_horse_head_mode FALSE}}
			{do
			{play_sfx cheat}
            {set $cheat_enabled_horse_head_mode TRUE}}}
         kDataUnhandled)
       ("Monkey Head Crowd"
         {if_else 
		  {'||' {$cheat_crowd_heads 0} {$cheat_crowd_heads eyeball_crowd_heads}}
            {do
            {play_sfx cheat_off}
            {set $cheat_crowd_heads 0}}
			{do
			{play_sfx cheat}
            {set $cheat_crowd_heads monkey_crowd_heads}}}
         kDataUnhandled)
       ("Eyeball Head Crowd"
         {if_else 
		  {'||' {$cheat_crowd_heads 0} {$cheat_crowd_heads monkey_crowd_heads}}
            {do
            {play_sfx cheat_off}
            {set $cheat_crowd_heads 0}}
			{do
			{play_sfx cheat}
            {set $cheat_crowd_heads eyeball_crowd_heads}}}
         kDataUnhandled)
       ("Flaming Head Mode"
         {if_else $cheat_enabled_flaming_head
            {do
            {play_sfx cheat_off}
            {set $cheat_enabled_flaming_head FALSE}}
			{do
			{play_sfx cheat}
            {set $cheat_enabled_flaming_head TRUE}}}
         kDataUnhandled)
      ("Neckless Mode"
         {if_else $neckless
            {do
            {play_sfx cheat_off}
            {set $neckless FALSE}}
			{do
			{play_sfx cheat}
            {set $neckless TRUE}}}
         kDataUnhandled)
	  ("Performance Mode"
         {if_else $cheat_enabled_performance_mode
            {do
            {play_sfx cheat_off}
            {set $cheat_enabled_performance_mode FALSE}}
			{do
			{play_sfx cheat}
            {set $cheat_enabled_performance_mode TRUE}}}
         kDataUnhandled)
      ("Roxbury Mode"
         {if_else $barf_cheat
            {do
            {play_sfx cheat_off}
            {set $barf_cheat FALSE}}
			{do
			{play_sfx cheat}
            {set $barf_cheat TRUE}}}
         kDataUnhandled)})
	(BUTTON_DOWN_MSG
   {if {== $button kPad_Tri}
         {play_sfx button_error (volume 1) (stop TRUE)}
         {ui pop_screen}}
		 kDataUnhandled)
				  }
{new
   GHScreen
   overshell_list_screen
   (panels overshell_list)
   (focus overshell_list)
   (allow_back FALSE)
   (animate_transition FALSE)
   (BUTTON_DOWN_MSG
   {if {== $button kPad_Tri}
		 {if_else {exists $modifier_exit}
            {ui goto_screen $modifier_exit}
            {ui goto_screen main_screen}}
         {ui pop_screen}}
		 kDataUnhandled)}
{new
   GHScreen
   overshell_character_list_screen
   (panels overshell_character_list)
   (focus overshell_character_list)
   (allow_back FALSE)
   (animate_transition FALSE)
   (BUTTON_DOWN_MSG
   {if {== $button kPad_Tri}
		 {if_else {exists $modifier_exit}
            {ui goto_screen $modifier_exit}
            {ui goto_screen main_screen}}
         {ui pop_screen}}
		 kDataUnhandled)}
{new
   MultiSelectListPanel
   overshell_diff_list
   (file overshell_list.milo)
   (focus sel_section.lst)
   (enter
   {do
         {sel_section.lst set_local_pos -140 0 35}
         {sel_section.lst set_data (Easy Medium Hard Expert)}
		 {sel_section.lst set circular 0}
         {sel_section.lst set_selected 3}}
		 {gs_title.lbl set_text "DIFFICULTY"})
   (SELECT_START_MSG
      {switch
       {$component selected_sym}
	   (Easy {{game get_player_config 0} set_difficulty kDifficultyEasy}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (Medium {{game get_player_config 0} set_difficulty kDifficultyMedium}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (Hard {{game get_player_config 0} set_difficulty kDifficultyHard}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (Expert {{game get_player_config 0} set_difficulty kDifficultyExpert}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   })
	(BUTTON_DOWN_MSG
   {if {== $button kPad_Tri}
         {play_sfx button_error (volume 1) (stop TRUE)}
         {meta_loading_nosave_goto main_screen}
		 {ui pop_screen}}
		 kDataUnhandled)
				  }
{new
   GHScreen
   overshell_diff_list_screen
   (panels overshell_diff_list)
   (focus overshell_diff_list)
   (allow_back FALSE)
   (animate_transition FALSE)
   (BUTTON_DOWN_MSG
   {if {== $button kPad_Tri}
         {meta_loading_nosave_goto main_screen}
         {ui pop_screen}}
		 kDataUnhandled)}
{new
   MultiSelectListPanel
   overshell_character_list
   (file overshell_list.milo)
   (focus sel_section.lst)
   (enter
   {do
         {sel_section.lst set_local_pos -140 0 35}
         {sel_section.lst set_data (punk1 punk2 alterna1 alterna2 glam1 glam2 goth2 goth1 metal1 metal2 rockabill1 rockabill2 rock2 rock1 deathmetal1 deathmetal2 classic funk1 grim)}
		 {sel_section.lst set circular 1}}
		 {gs_title.lbl set_text "CHARACTERS"})
   (SELECT_START_MSG
      {switch
       {$component selected_sym}
	   (punk1 {game set_character punk1 TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (punk2 {game set_character punk2 TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (alterna1 {game set_character alterna1 TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (alterna2 {game set_character alterna2 TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (glam1 {game set_character glam1 TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (glam2 {game set_character glam2 TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (goth2 {game set_character goth2 TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (goth1 {game set_character goth1 TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (metal1 {game set_character metal1 TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (metal2 {game set_character metal2 TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (rockabill1 {game set_character rockabill1 TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (rockabill2 {game set_character rockabill2 TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (rock2 {game set_character rock2 TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (rock1 {game set_character rock1 TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (deathmetal1 {game set_character deathmetal1 TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (deathmetal2 {game set_character deathmetal2 TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (classic {game set_character classic TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (funk1 {game set_character funk1 TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (grim {game set_character grim TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   })
	(BUTTON_DOWN_MSG
   {if {== $button kPad_Tri}
         {play_sfx button_error (volume 1) (stop TRUE)}
         {ui pop_screen}}
		 kDataUnhandled)
				  }
{new
   GHScreen
   overshell_character_list_screen
   (panels overshell_character_list)
   (focus overshell_character_list)
   (allow_back FALSE)
   (animate_transition FALSE)
   (BUTTON_DOWN_MSG
   {if {== $button kPad_Tri}
		 {if_else {exists $modifier_exit}
            {ui goto_screen $modifier_exit}
            {ui goto_screen main_screen}}
         {ui pop_screen}}
		 kDataUnhandled)}
{new
   MultiSelectListPanel
   overshell_venue_list
   (file overshell_list.milo)
   (focus sel_section.lst)
   (enter
   {do
         {sel_section.lst set_local_pos -140 0 35}
         {sel_section.lst set_data (battle small1 small2 big theatre fest arena stone)}
		 {sel_section.lst set circular 1}}
		 {gs_title.lbl set_text "VENUES"})
   (SELECT_START_MSG
      {switch
       {$component selected_sym}
	   (battle {game set_venue battle TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (small1 {game set_venue small1 TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (small2 {game set_venue small2 TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (big {game set_venue big TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (theatre {game set_venue theatre TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (fest {game set_venue fest TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (arena {game set_venue arena TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (stone {game set_venue stone TRUE}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   })
	(BUTTON_DOWN_MSG
   {if {== $button kPad_Tri}
         {play_sfx button_error (volume 1) (stop TRUE)}
         {ui pop_screen}}
		 kDataUnhandled)
				  }
{new
   GHScreen
   overshell_venue_list_screen
   (panels overshell_venue_list)
   (focus overshell_venue_list)
   (allow_back FALSE)
   (animate_transition FALSE)
   (BUTTON_DOWN_MSG
   {if {== $button kPad_Tri}
		 {if_else {exists $modifier_exit}
            {ui goto_screen $modifier_exit}
            {ui goto_screen main_screen}}
         {ui pop_screen}}
		 kDataUnhandled)}
{new
   GHScreen
   overshell_character_list_screen
   (panels overshell_character_list)
   (focus overshell_character_list)
   (allow_back FALSE)
   (animate_transition FALSE)
   (BUTTON_DOWN_MSG
   {if {== $button kPad_Tri}
		 {if_else {exists $modifier_exit}
            {ui goto_screen $modifier_exit}
            {ui goto_screen main_screen}}
         {ui pop_screen}}
		 kDataUnhandled)}
{new
   MultiSelectListPanel
   overshell_guitar_list
   (file overshell_list.milo)
   (focus sel_section.lst)
   (enter
   {sel_section.lst set_local_pos -140 0 35}
   ;{practice_sel_section.grp set_local_pos 0 0 20}
   {do
         {sel_section.lst set_data (
		 lespaul lp_cayenne lp_goddessburst lp_zakk
		 sg sg_white sg_gt sg_flames
		 flying_v fv_v2 fv_century fv_red
		 explorer exp_nat exp_sun exp_white exp_swirl
		 lespaul_doublecut lp_dbl_resin
		 firebird fb_blue fb_ebony fb_leopard
		 epiphone_coronet coronet_cherry coronet_burst coronet_green
		 kramer_vanguard van_yellow
		 moderne mod_cherry
		 corvus cor_nat
		 es335 es_cherry
		 kramer_650 650_white
		 eds eds_white
		 lespaul_doublecut_sticker lespaul_sonex lespaul_marauder
		 epiphone_casino epiphone_sheraton chet_atkins fish_reward usa_reward
		 coffin_reward viking_reward snaketapus_reward eyeball_reward
		 battleaxe_reward log_reward scythe #ifndef HX_XBOX guitar_red_octane #endif
         bass_musicman bass_musicman_lava bass_sg_mahogany bass_sg_cream bass_grabber_cherry
		 bass_grabber_maple bass_thunderbird_ebony bass_thunderbird_burst bass_hofner)}
		 {sel_section.lst set circular 1}}
		 {gs_title.lbl set_text "GUITARS"})
   (SELECT_START_MSG
      {switch
       {$component selected_sym}
	   (lespaul {game set_guitar lespaul lp_cherry}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (lespaul {game set_guitar lespaul lp_cherry}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (lespaul {game set_guitar lespaul lp_cayenne}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (lespaul {game set_guitar lespaul lp_goddessburst}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (lespaul {game set_guitar lespaul lp_zakk}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (sg {game set_guitar sg sg_cherry}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (sg_cherry {game set_guitar sg sg_cherry}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (sg_white {game set_guitar sg sg_white}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (sg_gt {game set_guitar sg sg_gt}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (sg_flames {game set_guitar sg sg_flames}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (flying_v {game set_guitar flying_v fv_white}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (fv_white {game set_guitar flying_v fv_white}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (fv_v2 {game set_guitar flying_v fv_v2}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (fv_century {game set_guitar flying_v fv_century}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (fv_red {game set_guitar flying_v fv_red}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (explorer {game set_guitar explorer exp_ebony}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (exp_ebony {game set_guitar explorer exp_ebony}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (exp_nat {game set_guitar explorer exp_nat}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (exp_sun {game set_guitar explorer exp_sun}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (exp_white {game set_guitar explorer exp_white}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (exp_swirl {game set_guitar explorer exp_swirl}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (lespaul_doublecut {game set_guitar lespaul_doublecut lp_dbl
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}_white}
	   kDataUnhandled)
	   (lp_dbl_yellow {game set_guitar lespaul_doublecut lp_dbl_yel
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}low}
	   kDataUnhandled)
	   (lp_dbl_resin {game set_guitar lespaul_doublecut lp_dbl_resi
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}n}
	   kDataUnhandled)
	   (firebird {game set_guitar firebird fb_burst}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (fb_burst {game set_guitar firebird fb_burst}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (fb_blue {game set_guitar firebird fb_blue}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (fb_ebony {game set_guitar firebird fb_ebony}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (fb_leopard {game set_guitar firebird fb_leopard}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
 	   (epiphone_coronet {game set_guitar epiphone_coronet coronet_brown}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (coronet_brown {game set_guitar epiphone_coronet coronet_brown}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (coronet_cherry {game set_guitar epiphone_coronet coronet_cherry}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (coronet_burst {game set_guitar epiphone_coronet coronet_burst}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (coronet_green {game set_guitar epiphone_coronet coronet_green}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (kramer_vanguard {game set_guitar kramer_vanguard van_black}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (van_black {game set_guitar kramer_vanguard van_black}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (van_yellow {game set_guitar kramer_vanguard van_yellow}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (moderne {game set_guitar moderne mod_nat}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (mod_nat {game set_guitar moderne mod_nat}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (mod_cherry {game set_guitar moderne mod_cherry}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (corvus {game set_guitar corvus cor_yellow}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (cor_yellow {game set_guitar corvus cor_yellow}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (cor_nat {game set_guitar corvus cor_nat}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (es335 {game set_guitar es335 es_maple}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (es_maple {game set_guitar es335 es_maple}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (es_cherry {game set_guitar es335 es_cherry}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (kramer_650 {game set_guitar kramer_650 650_stripe}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (650_stripe {game set_guitar kramer_650 650_stripe}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (650_white {game set_guitar kramer_650 650_white}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (eds {game set_guitar eds eds_cherry}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (eds_cherry {game set_guitar eds eds_cherry}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (eds_white {game set_guitar eds eds_white}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (lespaul_doublecut_sticker {game set_guitar lespaul_doublecut_sticker lp_dbl_sticker}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (lespaul_sonex {game set_guitar lespaul_sonex lp_sonex}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (lespaul_marauder {game set_guitar lespaul_marauder lp_marauder}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (epiphone_casino {game set_guitar epiphone_casino casino}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (epiphone_sheraton {game set_guitar epiphone_sheraton sheraton}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (chet_atkins {game set_guitar chet_atkins chet_orange}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (fish_reward {game set_guitar fish_reward fish}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (usa_reward {game set_guitar usa_reward usa}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (coffin_reward {game set_guitar coffin_reward coffin}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (viking_reward {game set_guitar viking_reward snaketapus}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (snaketapus_reward {game set_guitar snaketapus_reward snaketapus}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (eyeball_reward {game set_guitar eyeball_reward eyeball}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (battleaxe_reward {game set_guitar battleaxe_reward battleaxe}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (log_reward {game set_guitar log_reward log}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (scythe {game set_guitar scythe scythe}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (guitar_red_octane {game set_guitar guitar_red_octane guitar_red_octane}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (bass_musicman {game set_guitar bass_musicman bass_music_black}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (bass_musicman_lava {game set_guitar bass_musicman_lava bass_music_lava}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (bass_sg_mahogany {game set_guitar bass_sg_mahogany bass_sg_mahog}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (bass_sg_cream {game set_guitar bass_sg_cream bass_sg_cream}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (bass_grabber_cherry {game set_guitar bass_grabber_cherry bass_grab_cherry}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (bass_grabber_maple {game set_guitar bass_grabber_maple bass_grab_maple}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (bass_thunderbird_ebony {game set_guitar bass_thunderbird_ebony bass_tb_ebony}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (bass_thunderbird_burst {game set_guitar bass_thunderbird_burst bass_tb_burst}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   (bass_hofner {game set_guitar bass_hofner bass_hofner}
	   {if {! $helpentered} {ui push_screen overshell_help_screen}}
	   kDataUnhandled)
	   })
	(BUTTON_DOWN_MSG
   {if {== $button kPad_Tri}
         {play_sfx button_error (volume 1) (stop TRUE)}
         {ui pop_screen}}
		 kDataUnhandled)
				  }
{new
   GHScreen
   overshell_guitar_list_screen
   (panels overshell_guitar_list)
   (focus overshell_guitar_list)
   (allow_back FALSE)
   (animate_transition FALSE)
   (BUTTON_DOWN_MSG
   {if {== $button kPad_Tri}
		 {if_else {exists $modifier_exit}
            {ui goto_screen $modifier_exit}
            {ui goto_screen main_screen}}
         {ui pop_screen}}
		 kDataUnhandled)}
{new
   MultiSelectListPanel
   overshell_theme_list
   (file overshell_list.milo)
   (focus sel_section.lst)
   (enter
   {sel_section.lst set_local_pos -140 0 35}
   ;{sel_section.lst set circular 1}
   {sel_section.lst set alignment kTopCenter}
      {sel_section.lst
         set_data
         (
          "Guitar Hero 1"
          "Guitar Hero 2 Deluxe"
		  "Guitar Hero 80s Deluxe"
		  "Guitar Hero III"
		  "All Eggs Found"
		  )}
		  {gs_title.lbl set_text "THEME SELECT"})
   (SELECT_START_MSG
      {switch
       {$component selected_sym}
       ("Guitar Hero 1"
			{do
			{set $game80s FALSE}
			{set $egg5 FALSE}
			{set $egg4 FALSE}
			{set $egg2 TRUE}
            {set $gamegh1 TRUE}
			{ui pop_screen}
			{meta_loading_nosave_goto main_screen}}
         kDataUnhandled)
       ("Guitar Hero 2 Deluxe"
			{do
            {set $game80s FALSE}
			{set $egg5 FALSE}
			{set $egg4 FALSE}
			{set $egg2 FALSE}
            {set $gamegh1 FALSE}
			{ui pop_screen}
			{meta_loading_nosave_goto main_screen}}
         kDataUnhandled)
	   ("Guitar Hero 80s Deluxe"
			{do
            {set $game80s TRUE}
			{set $egg5 FALSE}
			{set $egg4 FALSE}
			{set $egg2 FALSE}
            {set $gamegh1 FALSE}
			{ui pop_screen}
			{meta_loading_nosave_goto main_screen}}
         kDataUnhandled)
	   ("Guitar Hero III"
			{do
            {set $game80s FALSE}
			{set $egg5 FALSE}
			{set $egg4 TRUE}
			{set $egg2 FALSE}
            {set $gamegh1 FALSE}
			{ui pop_screen}
			{meta_loading_nosave_goto main_screen}}
         kDataUnhandled)
       ("All Eggs Found"
			{do
            {set $egg5 TRUE}
			{ui pop_screen}
			{meta_loading_nosave_goto main_screen}}
         kDataUnhandled)})
	(BUTTON_DOWN_MSG
   {if {== $button kPad_Tri}
         {play_sfx button_error (volume 1) (stop TRUE)}
         {ui pop_screen}}
		 kDataUnhandled)
				  }
{new
   GHScreen
   overshell_theme_list_screen
   (panels overshell_theme_list)
   (focus overshell_theme_list)
   (allow_back FALSE)
   (animate_transition FALSE)
   (BUTTON_DOWN_MSG
   {if {== $button kPad_Tri}
		 {if_else {exists $modifier_exit}
            {ui goto_screen $modifier_exit}
            {ui goto_screen main_screen}}
         {ui pop_screen}}
		 kDataUnhandled)}
#define SLIDER_LEVELS
(12)
#define AUDIO_SETTINGS_PANEL_HANDLERS
((focus gs_band.sld)
   (focus_component
      "")
   (reset_focus TRUE)
   (orig_vol 0)
   (finish_load
      {gs_band.sld set_num_steps SLIDER_LEVELS}
      {gs_guitar.sld set_num_steps SLIDER_LEVELS}
      {gs_sfx.sld set_num_steps SLIDER_LEVELS})
   (slider_changed
      {'||'
         {!=
            {options get band_volume_idx}
            {gs_band.sld current}}
         {!=
            {options get guitar_volume_idx}
            {gs_guitar.sld current}}
         {!=
            {options get fx_volume_idx}
            {gs_sfx.sld current}}})
   (enter
      {gs_band.sld
         set_current
         {options get band_volume_idx}}
      {gs_guitar.sld
         set_current
         {options get guitar_volume_idx}}
      {gs_sfx.sld
         set_current
         {options get fx_volume_idx}}
#ifndef HX_XBOX
      {stereo.chk
         set_check
         {options get_stereo}}
#endif)
   (set_volumes
      {if
         {$this slider_changed}
         {options
            set
            band_volume_idx
            {gs_band.sld current}}
         {options
            set
            guitar_volume_idx
            {gs_guitar.sld current}}
         {options
            set
            fx_volume_idx
            {gs_sfx.sld current}}})
   (slider_select_cancel
      ($component)
      {switch
         $component
         (gs_band.sld
            {$component
               set_current
               [orig_vol]})
         (gs_guitar.sld
            {$component
               set_current
               [orig_vol]})
         (gs_sfx.sld
            {$component
               set_current
               [orig_vol]})}
      {$this update_help_display}
      kDataUnhandled)
   (FOCUS_MSG
      {$this
         set
         focus_component
         {$new_focus name}}
      {$this update_help_display})
   (update_help_display
      {if_else
         {$this slider_selected}
         {helpbar
            set_display
            ((fret1 help_confirm)
               (fret2 help_cancel)
               (strum help_adjvol))}
#ifndef HX_XBOX
         {do
            {if_else
               {==
                  [focus_component]
                  "gs_stereo.btn"}
               {helpbar
                  set_display
                  ((fret1 help_onoff)
                     (fret2 help_back)
                     (strum help_updown))}
               {helpbar
                  set_display
                  ((fret1 help_select)
                     (fret2 help_back)
                     (strum help_updown))}}}}
#else
          {helpbar
            set_display
            ((fret1 help_select)
               (fret2 help_back)
               (strum help_updown))}
#endif)
   (slider_start_msg
      ($component)
      {do
         ($vol
            {options
               get_volume_from_idx
               {$component current}})
         {switch
            $component
            (gs_band.sld
               {play_sfx
                  slider_band
                  (volume $vol)
                  (stop TRUE)})
            (gs_guitar.sld
               {play_sfx
                  slider_gtr
                  (volume $vol)
                  (stop TRUE)})
            (gs_sfx.sld
               {play_sfx
                  slider_sfx
                  (volume $vol)
                  (stop TRUE)})}})
   (SELECT_START_MSG
      {switch
         $component
         (gs_band.sld
            {$this
               set
               orig_vol
               {gs_band.sld current}})
         (gs_guitar.sld
            {$this
               set
               orig_vol
               {gs_guitar.sld current}})
         (gs_sfx.sld
            {$this
               set
               orig_vol
               {gs_sfx.sld current}})
         (gs_stereo.btn
            {stereo.chk toggle}
            {options
               set_stereo
               {stereo.chk get_check}})
         kDataUnhandled}
      {$this update_help_display}))
{new
   SliderPanel
   pause_audio_settings_panel
   (file pause_audio_settings_gh1.milo)
   AUDIO_SETTINGS_PANEL_HANDLERS}
{new
   GHScreen
   pause_audio_settings_screen
   (panels pause_audio_settings_panel)
   (focus pause_audio_settings_panel)
   (allow_back FALSE)
   (animate_transition FALSE)
   (BUTTON_DOWN_MSG
      {if
         {&&
            {!
               {overshell_slider slider_selected}}
            {== $button kPad_Tri}}
		 {if_else {exists $modifier_exit}
            {ui goto_screen $modifier_exit}
            {ui goto_screen main_screen}}
            {ui pop_screen}}
      kDataUnhandled)}
{new
   MultiSelectListPanel
   overshell_highway_list
   (file overshell_list.milo)
   (focus sel_section.lst)
   (enter
   {do
         {sel_section.lst set_local_pos -140 0 35}
         {sel_section.lst set_data (#include ../track/surfaces/highways.dta)}
		 {sel_section.lst set circular 1}}
		 {gs_title.lbl set_text "SET HIGHWAY"})
   (SELECT_START_MSG
      {set $highway {$component selected_sym}}
	  {if {! $helpentered} {ui push_screen overshell_help_screen}}
      {switch
         {$component selected_sym}
         ("none"
            {set $highway ""})}
	   kDataUnhandled)
	(BUTTON_DOWN_MSG
   {if {== $button kPad_Tri}
         {synth play_sequence button_back.cue}
         {ui pop_screen}}
		 kDataUnhandled)
				  }
{new
   GHScreen
   overshell_highway_list_screen
   (panels overshell_highway_list)
   (focus overshell_highway_list)
   (allow_back FALSE)
   (animate_transition FALSE)
   (BUTTON_DOWN_MSG
   {if {== $button kPad_Tri}
		 {if_else {exists $modifier_exit}
            {ui goto_screen $modifier_exit}
            {ui goto_screen main_screen}}
         {ui pop_screen}}
		 kDataUnhandled)}
{new
   GHPanel
   overshell_help_panel
   (file overshell_help.milo)
   (focus quit.btn)
   (enter
      {pause_controller_msg.lbl set_text "This is me warning you that you must back out to the song select menu for most modifications to take proper effect."}
      {$this set_focus quit.btn}
	  {set $helpentered TRUE})}
{new
   GHScreen
   overshell_help_screen
   (panels overshell_help_panel)
   (focus overshell_help_panel)
   (allow_back FALSE)
   (animate_transition FALSE)
   (SELECT_START_MSG
      {ui pop_screen})}