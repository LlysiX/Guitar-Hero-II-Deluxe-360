{new GHPanel pause_panel
   (file overshell_pause.milo)
   (focus lose_resume_career.btn)
   (reset_focus TRUE)
   (enter
   {lose_info.view set_local_pos 0 200 70}
   {lose_song_data.lbl set_localized_text {game get_song_text}}
      {lose_diff_data.lbl set_text
         {if_else {== {gamecfg get mode} multi_coop}
            {sprintf "%s/%s" {game get_difficulty_sym 0} {game get_difficulty_sym 1}}
            {game get_difficulty_sym 0}}}
   {lose_progress_data.lbl set_localized_text {sprintf {localize percent_complete_format} {player0 percent_complete}}}
   {career_buttons.view set_showing TRUE}
   {normal_buttons.view set_showing FALSE})}
#define PAUSE_SCREEN_HANDLERS
((allow_back FALSE)
   (animate_transition FALSE)
   (enter
      {if {world_panel is_up}
         {world_panel set_paused TRUE}})
   (resume
      {if {== {gamecfg get mode} practice}
         {if_else $focusmode
            {practice_focus_panel set keep_section_text TRUE}
            {practice_panel set keep_section_text TRUE}}}
      {set $game_unpause_on_enter TRUE}
      {if_else {&&
      {== {gamecfg get game_screen} practice_game_screen}
      $focusmode}
         {ui goto_screen practice_game_focus_screen}
         {ui goto_screen {gamecfg get game_screen}}})
   (restart
      {synth stop_all_sfx}
      {synth play_sequence button_play}
      {if_else {game get intro_complete}
         {game_restart_fast}
         {game_restart}}))
#define PAUSE_SELECT_START_HANDLER
((SELECT_START_MSG
      {switch $component
	     (lose_resume_career.btn {$this resume})
         (lose_restart_career.btn
		 {pause_confirm_restart_screen set pause_screen $this}
         {ui goto_screen pause_confirm_restart_screen})
		 (lose_diff_career.btn {ui push_screen overshell_diff_list_screen})
         (lose_practice_career.btn {$this goto_practice_mode})
         (lose_selsong_career.btn {meta_loading_goto sel_song_screen})
         (lose_quit_career.btn
         {pause_confirm_quit_screen set pause_screen $this}
         {ui goto_screen pause_confirm_quit_screen})}))
{new GHScreen pause_screen
   (panels GAME_PANELS pause_panel)
   (focus pause_panel)
   (clear_vram TRUE)
   (in_game TRUE)
   PAUSE_SCREEN_HANDLERS
   PAUSE_SELECT_START_HANDLER
   (BUTTON_DOWN_MSG
      {if {== $button kPad_Start}
         {$this resume}}
      kDataUnhandled)}
{new GHPanel pract_pause_panel
   (file
      {if_else $gamegh1
         pract_pause_gh1.milo
         pract_pause.milo})
   (enter
      {do
         ($career {practice_selpart_screen get career_mode})
         {tut_pause_career_buttons.view set_showing $career}
         {tut_pause_buttons.view set_showing {! $career}}
         {$this set_focus {if_else $career resume_career.btn resume.btn}}})}
{new GHScreen pract_pause_screen
   (panels PRACTICE_PANELS pract_pause_panel)
   (focus pract_pause_panel)
   (clear_vram TRUE)
   (in_game TRUE)
   PAUSE_SCREEN_HANDLERS
   (BUTTON_DOWN_MSG
      {if {== $button kPad_Start}
         {$this resume}}
      kDataUnhandled)
   (SELECT_START_MSG
      {switch $component
         (resume.btn {$this resume})
         (resume_career.btn {$this resume})
         (restart.btn {$this restart})
         (restart_career.btn {$this restart})
         (section.btn {meta_loading_nosave_goto practice_sel_section_screen})
         (section_career.btn {meta_loading_nosave_goto practice_sel_section_screen})
         (change_speed.btn {ui push_screen overshell_slider_screen})
         (change_speed_career.btn {ui push_screen overshell_slider_screen})
         (newsong.btn {meta_loading_nosave_goto sel_song_screen})
         (quit_career.btn
            {meta_loading_goto main_screen})
         (quit.btn {meta_loading_goto main_screen})})}
{new GHScreen pract_pause_focus_screen
   (panels PRACTICE_FOCUS_PANELS pract_pause_panel)
   (focus pract_pause_panel)
   (clear_vram TRUE)
   (in_game TRUE)
   PAUSE_SCREEN_HANDLERS
   (BUTTON_DOWN_MSG
      {if {== $button kPad_Start}
         {$this resume}}
      kDataUnhandled)
   (SELECT_START_MSG
      {switch $component
         (resume.btn {$this resume})
         (resume_career.btn {$this resume})
         (restart.btn {$this restart})
         (restart_career.btn {$this restart})
         (section.btn {meta_loading_nosave_goto practice_sel_section_screen})
         (section_career.btn {meta_loading_nosave_goto practice_sel_section_screen})
         ;(change_speed.btn
         ;   {ui push_screen overshell_slider_screen})
         (change_speed_career.btn
            {ui push_screen overshell_slider_screen})
         (newsong.btn {meta_loading_nosave_goto practice_selsong_screen})
         (quit_career.btn
            {meta_loading_goto main_screen})
         (quit.btn {meta_loading_goto main_screen})})}
{func meta_loading_goto
   ($next_screen)
   {meta_loading_screen set next_screen $next_screen}
   {ui goto_screen meta_loading_screen}}
{func meta_loading_nosave_goto
   ($next_screen)
   {meta_loading_screen set autosave FALSE}
   {meta_loading_goto $next_screen}}
{new UIPanel meta_loading_panel
   (file meta_loading.milo)
   (enter
      {animate_forever_30fps $this meta_loading.view})}
{new GHScreen meta_loading_screen
   (panels meta_loading_panel)
   (clear_vram TRUE)
   (allow_back FALSE)
   (animate_transition FALSE)
   (autosave TRUE)
   (next_screen main_screen)
   (TRANSITION_COMPLETE_MSG
      {{game get_bank_loader} reset}
      {if_else
            #ifdef HX_XBOX
            {&&
            [autosave]
            {! $signin_changed_notification}}
            #else
            [autosave]
            #endif
         {autosave_goto [next_screen]}
         {do
            {set [autosave] TRUE}
            {ui goto_screen [next_screen]}}})}
{new GHPanel pause_controller_panel
   (file pause_controller.milo)
   (focus resume.btn)
   (enter
      {pause_controller_msg.lbl set_text {if_else {game multiplayer}
            controller_loss_msg_multi
            controller_loss_msg}})
   (poll
      {if_else {game is_missing_controller}
         {resume.btn set_state kDisabled}
         {resume.btn set_state kFocused}})}
{new GHScreen pause_controller_screen
   (panels GAME_PANELS pause_controller_panel)
   (focus pause_controller_panel)
   (clear_vram TRUE)
   (in_game TRUE)
   PAUSE_SCREEN_HANDLERS
   PAUSE_SELECT_START_HANDLER
   (BUTTON_DOWN_MSG
      {if_else {game is_missing_controller}
         TRUE
         kDataUnhandled})}
{new GHScreen practice_pause_controller_screen
   (panels PRACTICE_PANELS pause_controller_panel)
   (focus pause_controller_panel)
   (clear_vram TRUE)
   (in_game TRUE)
   PAUSE_SCREEN_HANDLERS
   PAUSE_SELECT_START_HANDLER
   (BUTTON_DOWN_MSG
      {if_else {game is_missing_controller}
	     TRUE
		 kDataUnhandled})}
{new GHPanel multi_pause_controller_panel
   (file multi_pause_controller.milo)
   (focus quit.btn)
   (enter
      {pause_controller_msg.lbl set_text
         {if_else {game multiplayer}
            controller_loss_msg_multi
            controller_loss_msg}})
   (poll
      {if_else {game is_missing_multi_controller}
         {do
            {resume.btn set_state kDisabled}
            {$this set_focus quit.btn}}
         {if {== {resume.btn get_state} kDisabled}
            {$this set_focus resume.btn}}})}
{new GHScreen multi_pause_controller_screen
   (panels GAME_PANELS multi_pause_controller_panel)
   (focus multi_pause_controller_panel)
   (clear_vram TRUE)
   (in_game TRUE)
   PAUSE_SCREEN_HANDLERS
   PAUSE_SELECT_START_HANDLER}
{new GHPanel lefty_restart_panel
   (file lefty_restart.milo)
   (focus reset.btn)}
{new GHScreen lefty_restart_screen
   (panels GAME_PANELS lefty_restart_panel helpbar)
   (focus lefty_restart_panel)
   (in_game TRUE)
   (lefty_switch 0)
   PAUSE_SCREEN_HANDLERS
   PAUSE_SELECT_START_HANDLER
   (helpbar
      (default
         ((fret1 help_continue))))}
#define VIDEO_SETTINGS_PANEL_HANDLERS
((focus gs_left_p1.btn)
   (focus_component
      "")
   (orig_sync 0)
   (enter
      {lefty1.chk
         set_check
         {options get_lefty 0}}
      {lefty2.chk
         set_check
         {options get_lefty 1}}
#ifndef HX_XBOX
      {widescreen.chk
         set_check
         {options get_widescreen}}
      {p_scan.chk
         set_check
         {options get_pscan}}
#endif
      {$this update_help_display}
      {if
         {==
            {$this name}
            pause_video_settings_panel}
         {hud set_showing TRUE}
         {track_panel set_showing TRUE}
         {world_panel set_showing TRUE}})
   (update_help_display
      {if_else
         {==
            [focus_component]
            "calibrate_lag.btn"}
         {helpbar
            set_display
            ((fret1 help_select)
               (fret2 help_back)
               (strum help_updown))}
         {helpbar
            set_display
            ((fret1 help_select)
               (fret2 help_back)
               (strum help_updown))}})
   (FOCUS_MSG
      {$this
         set
         focus_component
         {$new_focus name}}
      {$this update_help_display})
   (slider_start_msg
      ($component)
      {synth play_sequence button_toggle})
   (slider_select_cancel
      ($component)
      {$this update_help_display}
      kDataUnhandled)
   (SELECT_START_MSG
      {switch
         $component
         (p_scan.btn
            {if_else
               {p_scan.chk get_check}
               {do
                  {p_scan.chk toggle}
                  {options
                     set_pscan
                     {p_scan.chk get_check}}}
               {do
                  {if
                     {== $this pause_video_settings_panel}
                     {pause_video_settings_screen set stash_lefty_settings FALSE}}
                  {ui
                     goto_screen
                     [pscan_warning]}}})
         (widescreen.btn
            {widescreen.chk toggle}
            {options
               set_widescreen
               {widescreen.chk get_check}})
         (gs_left_p1.btn
            {lefty1.chk toggle}
            {options
               set_lefty
               0
               {lefty1.chk get_check}})
         (gs_left_p2.btn
            {lefty2.chk toggle}
            {options
               set_lefty
               1
               {lefty2.chk get_check}})
         (calibrate_lag.btn
            {lag_panel set from_panel $this}
            {if_else
               {== $this video_settings_panel}
               {ui goto_screen lag_screen}
               {ui goto_screen pause_lag_screen}})
         kDataUnhandled}
      {$this update_help_display}))
{new
   SliderPanel
   pause_video_settings_panel
   (file 
   {if_else $gamegh1
   pause_video_settings_gh1.milo
   pause_video_settings.milo})
   VIDEO_SETTINGS_PANEL_HANDLERS
   #ifndef HX_XBOX (pscan_warning pause_pscan_warning_screen) #endif}
{new
   GHScreen
   pause_video_settings_screen
   (panels GAME_PANELS pause_video_settings_panel helpbar)
   (focus pause_video_settings_panel)
   (in_game TRUE)
   (allow_back FALSE)
   (animate_transition FALSE)
   (old_lefty_0 0)
   (old_lefty_1 0)
   (stash_lefty_settings TRUE)
   (enter
      {if
         {! $encorefocus}
         {world_panel
            set_showing
            {! $focusmode}}}
      {if_else
         [stash_lefty_settings]
         {do
            {set
               [old_lefty_0]
               {options get_lefty 0}}
            {set
               [old_lefty_1]
               {options get_lefty 1}}}
         {set
            [stash_lefty_settings]
            TRUE}}
      {if_else
         {>
            {game num_players}
            1}
         {$this
            enable
            {pause_video_settings_panel find gs_left_p2.btn}}
         {$this
            disable
            {pause_video_settings_panel find gs_left_p2.btn}}})
   (lefty_changed
      {'||'
         {!=
            [old_lefty_0]
            {options get_lefty 0}}
         {!=
            [old_lefty_1]
            {options get_lefty 1}}})
   (BUTTON_DOWN_MSG
      {if
         {== $button kPad_Tri}
         {if_else
            {$this lefty_changed}
            {do
               {if_else
                  {&&
                     {!=
                        [old_lefty_0]
                        {options get_lefty 0}}
                     {!=
                        [old_lefty_1]
                        {options get_lefty 1}}}
                  {lefty_restart_screen set lefty_switch 2}
                  {if_else
                     {!=
                        [old_lefty_0]
                        {options get_lefty 0}}
                     {lefty_restart_screen set lefty_switch 0}
                     {lefty_restart_screen set lefty_switch 1}}}
               {ui goto_screen lefty_restart_screen}}
            {ui goto_screen pause_screen}}}
      kDataUnhandled)}
{new GHPanel lose_panel
   (file lose.milo)
   (enter
      {crowd_audio turn_off}
      {lose_song_data.lbl set_localized_text {game get_song_text}}
      {lose_diff_data.lbl set_text
         {if_else {== {gamecfg get mode} multi_coop}
            {sprintf "%s/%s" {game get_difficulty_sym 0} {game get_difficulty_sym 1}}
            {game get_difficulty_sym 0}}}
      {lose_progress_data.lbl set_localized_text {sprintf {localize percent_complete_format} {player0 percent_complete}}}
      {do
         ($career {== {gamecfg get mode} career})
         {career_buttons.view set_showing $career}
         {normal_buttons.view set_showing {! $career}}
         {$this set_focus
            {if_else $career
               lose_restart_career.btn
               lose_restart_normal.btn}}})
   (SELECT_START_MSG
      {switch $component
         (lose_restart_career.btn {game_restart_fast})
         (lose_restart_normal.btn {game_restart_fast})
         (lose_practice_career.btn {$this goto_practice_mode})
         (lose_selsong_career.btn {meta_loading_goto {gamecfg get continue_screen}})
         (lose_selsong_normal.btn {meta_loading_goto {gamecfg get continue_screen}})
         (lose_quit_career.btn {meta_loading_goto main_screen})
         (lose_quit_normal.btn {meta_loading_goto main_screen})})
   (goto_practice_mode
      {gamecfg set mode practice}
      {gamecfg set_track 0 0}
      {practice_sel_section_screen set career_mode TRUE}
      {meta_loading_goto practice_sel_section_screen})}
{new GHScreen lose_screen
   (panels GAME_PANELS lose_panel helpbar)
   (focus lose_panel)
   (clear_vram TRUE)
   (allow_back FALSE)
   (animate_transition FALSE)
   (helpbar
      (default
         ((fret1 help_continue)
            (strum help_updown))))}
{new
   GHPanel
   pause_confirm_restart_panel
   (file pause_restart.milo)
   (focus restart.btn)
   (enter
      {$this set_focus restart.btn})}
{new
   GHScreen
   pause_confirm_restart_screen
   (panels GAME_PANELS pause_confirm_restart_panel)
   (focus pause_confirm_restart_panel)
   (in_game TRUE)
   (allow_back FALSE)
   (animate_transition FALSE)
   (pause_screen pause_screen)
   (SELECT_START_MSG
      {switch
         $component
         (restart.btn
            {[pause_screen]
               restart})
         (cancel.btn
            {ui
               goto_screen
               [pause_screen]})
         kDataUnhandled})}
{new
   GHPanel
   pause_confirm_quit_panel
   (file pause_quit.milo)
   (focus quit.btn)
   (enter
      {$this set_focus quit.btn})}
{new
   GHScreen
   pause_confirm_quit_screen
   (panels GAME_PANELS pause_confirm_quit_panel)
   (focus pause_confirm_quit_panel)
   (in_game TRUE)
   (allow_back FALSE)
   (animate_transition FALSE)
   (pause_screen pause_screen)
   (SELECT_START_MSG
      {switch
         $component
         (quit.btn
            {meta_loading_goto main_screen})
         (cancel.btn
            {ui
               goto_screen
               [pause_screen]})
         kDataUnhandled})}